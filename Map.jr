import java.awt.Color;

public class Map {
	
	private Item items[][];
	private User user;
	private Ghosts AI;
	
	private int width=28;
	private int height=31;
	public int blocksize=22;
	
	private final int mapdata[] =
	{ 5,4,4,4,4,4,4,4,4,4,4,4,4,7,5,4,4,4,4,4,4,4,4,4,4,4,4,7,
	  3,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,3,
	  3,1,5,4,4,7,1,5,4,4,4,7,1,3,3,1,5,4,4,4,7,1,5,4,4,7,1,3,
	  3,2,3,0,0,3,1,3,0,0,0,3,1,3,3,1,3,0,0,0,3,1,3,0,0,3,2,3,
	  3,1,6,4,4,8,1,6,4,4,4,8,1,6,8,1,6,4,4,4,8,1,6,4,4,8,1,3,
     3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,
     3,1,5,4,4,7,1,5,7,1,5,4,4,4,4,4,4,7,1,5,7,1,5,4,4,7,1,3,
     3,1,6,4,4,8,1,3,3,1,6,4,4,7,5,4,4,8,1,3,3,1,6,4,4,8,1,3,
     3,1,1,1,1,1,1,3,3,1,1,1,1,3,3,1,1,1,1,3,3,1,1,1,1,1,1,3,
     6,4,4,4,4,7,1,3,6,4,4,7,0,3,3,0,5,4,4,8,3,1,5,4,4,4,4,8, 
     0,0,0,0,0,3,1,3,5,4,4,8,0,6,8,0,6,4,4,7,3,1,3,0,0,0,0,0,
     0,0,0,0,0,3,1,3,3,0,0,0,0,0,0,0,0,0,0,3,3,1,3,0,0,0,0,0,
     0,0,0,0,0,3,1,3,3,0,5,4,4,0,0,4,4,7,0,3,3,1,3,0,0,0,0,0,
     4,4,4,4,4,8,1,6,8,0,3,0,0,0,0,0,0,3,0,6,8,1,6,4,4,4,4,4,
     0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,3,0,0,0,1,0,0,0,0,0,0,
     4,4,4,4,4,7,1,5,7,0,3,0,0,0,0,0,0,3,0,5,7,1,5,4,4,4,4,4,
     0,0,0,0,0,3,1,3,3,0,6,4,4,4,4,4,4,8,0,3,3,1,3,0,0,0,0,0,
     0,0,0,0,0,3,1,3,3,0,0,0,0,0,0,0,0,0,0,3,3,1,3,0,0,0,0,0,
     0,0,0,0,0,3,1,3,3,0,5,4,4,4,4,4,4,7,0,3,3,1,3,0,0,0,0,0,
     5,4,4,4,4,8,1,6,8,0,6,4,4,7,5,4,4,8,0,6,8,1,6,4,4,4,4,7,
     3,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,3,
     3,1,5,4,4,7,1,5,4,4,4,7,1,3,3,1,5,4,4,4,7,1,5,4,4,7,1,3,
     3,1,6,4,7,3,1,6,4,4,4,8,1,6,8,1,6,4,4,4,8,1,3,5,4,8,1,3,
     3,2,1,1,3,3,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,3,3,1,1,2,3,
     6,4,7,1,3,3,1,5,7,1,5,4,4,4,4,4,4,7,1,5,7,1,3,3,1,5,4,8,
     5,4,8,1,6,8,1,3,3,1,6,4,4,7,5,4,4,8,1,3,3,1,6,8,1,6,4,7,
     3,1,1,1,1,1,1,3,3,1,1,1,1,3,3,1,1,1,1,3,3,1,1,1,1,1,1,3,
     3,1,5,4,4,4,4,8,6,4,4,7,1,3,3,1,5,4,4,8,6,4,4,4,4,7,1,3,
     3,1,6,4,4,4,4,4,4,4,4,8,1,6,8,1,6,4,4,4,4,4,4,4,4,8,1,3,
     3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,
     6,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8
     };
	
	public Map(int w, int h, int bs) {
		/*width = w;
		height = h;
		blocksize = bs;*/
		Color col;
		items = new Item[width][height];
		for (int x=0; x<width; x++) {
			for (int y=0; y<height; y++) {
				switch (mapdata[y*width+x]) {
					case 0:
						items[x][y] = null;
						continue;
					case Item.ITEM_FOOD:
						col = Color.white;
						break;
					case Item.ITEM_POWERUP:
						col = Color.white;
						break;
					default:
						col = Color.red;
						break;
				}
				items[x][y] = new Item(x, y, mapdata[y*width+x], col, this);
			}
		}

      user = new User(14, 23, Color.yellow, this);
	}
	
   public boolean checkBounds(int x, int y) {
      //Return true if coordinates are in bounds (e.g. within array bound), false otherwise
      return !(x < 0 || x >= width || y < 0 || y >= height);
   }

   public boolean isOpen(int x, int y) {
      //Return true if coordinates are in bounds and not blocked
      if (checkBounds(x,y) == false)
         return false;
      
      if (items[x][y] != null)
         return !items[x][y].isEdge();

      return true;
   }
   public User getUser() {
      return user;
   }

   public Ghosts getAI() {
      return AI;
   }

	public Item getItem(int x, int y) {
		return items[x][y];
	}
	
	public Item[][] getItems() {
		return items;
	}
	
}
